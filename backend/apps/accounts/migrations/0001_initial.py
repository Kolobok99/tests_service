# Generated by Django 4.1.2 on 2022-12-08 07:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tests', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Время создания ')),
                ('modified_on', models.DateTimeField(auto_now=True, verbose_name='Время добавления')),
                ('email', models.EmailField(error_messages={'invalid': 'Некорректный email', 'unique': 'Пользователь с таким email уже существует.'}, max_length=254, unique=True, verbose_name='Почта')),
                ('password', models.CharField(max_length=128, verbose_name='Пароль')),
                ('is_active', models.BooleanField(default=True, editable=False, verbose_name='Активирован?')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='SolvedTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Время создания ')),
                ('modified_on', models.DateTimeField(auto_now=True, verbose_name='Время добавления')),
                ('status', models.CharField(choices=[('C', 'CREATED'), ('F', 'FINISHED')], default='C', max_length=1, verbose_name='Статус')),
                ('corrects', models.PositiveIntegerField(default=0, verbose_name='Кол-во правильных')),
                ('un_corrects', models.PositiveIntegerField(default=0, verbose_name='Кол-во Неправильных')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='tests.test')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SolvedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Время создания ')),
                ('modified_on', models.DateTimeField(auto_now=True, verbose_name='Время добавления')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solved_questions', to='tests.question')),
                ('responses', models.ManyToManyField(related_name='solved_questions', to='tests.option')),
                ('solved_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='solved_questions', to='accounts.solvedtest')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
